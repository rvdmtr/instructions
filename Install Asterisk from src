==================FOREWORD====================
Run Asterisk in background
/usr/sbin/asterisk

Connect to console 
/usr/sbin/asterisk -rvvvvvv


#Asterisk paths


#The location where the Asterisk configuration files are stored
/etc/asterisk


##########configs
/etc/asterisk/{sip.conf, extensions.conf, modules.conf}

#Installed Modules
/usr/lib/asterisk/modules // if u want install new modules, remove older one

#Asterisk resources libs (music on hold, scripts, system prompts)
/var/lib/asterisk

#Frequently changed files / the spool 
/var/spool/asterisk

#Log files (CDR, channel events from CEL, debug logs, queue logs, messages, erros etc.) | Troubleshooting
/var/log/asterisk


Separating the /var Mount Point to Its Own Partition
On a system dedicated to Asterisk, the directory with the largest storage requirement is /var.
This is where Asterisk will store recordings, voicemails, logfiles, prompts, and a 
myriad of constantly growing information. In normal operation, it is unlikely that Asterisk will fill
the hard disk. However, if you have extensive logging turned on or are recording all calls, this could,
in theory, occur. (This is likely to happen several months after you’ve completed the install
and take your entire staff by surprise.) If the drive on which the operating system is mounted fills up,
there is the potential for a kernel panic. By separating /var from the rest of the hard drive,
you significantly lower the risk of a system failure.





-------------------

The dialplan is the heart of Asterisk. All channels that arrive in the system will be passed
through the dialplan, which contains the call-flow script that determines how the in‐
coming calls are handled.
A dialplan can be written in one of three ways:
•Using traditional Asterisk dialplan syntax in /etc/asterisk/extensions.conf
•Using Asterisk Extension Logic (AEL) in /etc/asterisk/extensions.ael
•Using Lua in /etc/asterisk/extensions.lua

-----------------
Versions
1,2; 1,4; 1,6; 1,8 - EOL
10,11,12,13.. 18 LTS
----------------


==================Installation process==================

1
RHEL
# yum update -y && reboot
Ubuntu
sudo apt-get update && sudo apt-get upgrade && sudo reboot

2
RHEL
# yum install -y ntp && ntpdate pool.ntp.org && \
chkconfig ntpd on && service ntpd start
Ubuntu
sudo apt-get install ntp

### If date is incorrect
/etc/localtime 
mv /etc/localtime /etc/localtime.bak
ln -s /usr/share/zoneinfo/Europe/Moscow /etc/localtime
#ntpdate pool.ntp.org
###

3
RHEL
# adduser asteriskpbx && passwd asteriskpbx && \
yum install sudo && visudo

4.Install software dependencies:
RHEL
sudo yum install gcc gcc-c++ make wget subversion \
libxml2-devel ncurses-devel openssl-devel \
libxml2-devel sqlite-devel libuuid-devel vim-enhanced
Ubuntu
sudo apt-get install build-essential subversion \
libncurses5-dev libssl-dev libxml2-dev libsqlite3-dev \
uuid-dev vim-nox

5.Create your directory structure:
$ 
mkdir -p ~/src/asterisk-complete/asterisk
$ 
cd ~/src/asterisk-complete/asterisk

6. Download & unpack
wget http://downloads.asterisk.org/pub/telephony/asterisk/asterisk-13-current.tar.gz
tar -pzxvf asterisk-13-current.tar.gz

7. Run script with libdir option
./configure --libdir=/usr/lib64
If u see an error like this >>> "configure: error: *** JSON support not found (this typically means the libjansson development package is missing"
yum -y install jansson-devel

8. 
#make
#make install
#make config

9. Install additional sound prompts (Extra Sounds Packages) from menuselect

#pwd
#cd ~/src/asterisk-complete/asterisk/11/
#make menuselect
#sudo make install

9.Modify the file permissions of the directories Asterisk was installed to:
$ sudo chown -R asteriskpbx:asteriskpbx /var/lib/asterisk/
$ sudo chown -R asteriskpbx:asteriskpbx /var/spool/asterisk/
$ sudo chown -R asteriskpbx:asteriskpbx /var/log/asterisk/
$ sudo chown -R asteriskpbx:asteriskpbx /var/run/asterisk/

OR
sudo chown -R  asteriskpbx:asteriskpbx  {/var/lib,/var/spool,/var/log,/var/run}/asterisk

10.Create the /etc/asterisk directory and copy the indications.conf sample file into it:
$ sudo mkdir -p /etc/asterisk
$ sudo chown asteriskpbx:asteriskpbx /etc/asterisk
$ cd /etc/asterisk/
$ cp ~/src/asterisk-complete/asterisk/11/configs/indications.conf.sample ./indications.conf

11.Copy the sample asterisk.conf file into /etc/asterisk and change runuser and rungroup to have values of asteriskpbx:
$ cp ~/src/asterisk-complete/asterisk/11/configs/asterisk.conf.sample /etc/asterisk/asterisk.conf
$ vim /etc/asterisk/asterisk.conf


12.Create the modules.conf file. Enable loading of modules automatically, and disableextra modules:
$ cat >> /etc/asterisk/modules.conf

; The modules.conf file, used to define which modules Asterisk should load (or not load).
;
[modules]
autoload=yes

; Resource modules currently not needed
noload => res_speech.so
noload => res_phoneprov.so
noload => res_ael_share.so
noload => res_clialiases.so
noload => res_adsi.so

; PBX modules currently not needed
noload => pbx_ael.so
noload => pbx_dundi.so

; Channel modules currently not needed
noload => chan_oss.so
noload => chan_mgcp.so
noload => chan_skinny.so
noload => chan_phone.so
noload => chan_agent.so
noload => chan_unistim.so
noload => chan_alsa.so

; Application modules currently not needed
noload => app_nbscat.so
noload => app_amd.so
noload => app_minivm.so
noload => app_zapateller.so
noload => app_ices.so
noload => app_sendtext.so
noload => app_speech_utils.so
noload => app_mp3.so
noload => app_flash.so
noload => app_getcpeid.so
noload => app_setcallerid.so
noload => app_adsiprog.so
noload => app_forkcdr.so
noload => app_sms.so
noload => app_morsecode.so
noload => app_followme.so
noload => app_url.so
noload => app_alarmreceiver.so
noload => app_disa.so
noload => app_dahdiras.so
noload => app_senddtmf.so
noload => app_sayunixtime.so
noload => app_test.so
noload => app_externalivr.so
noload => app_image.so
noload => app_dictate.so
noload => app_festival.so


13.Configure musiconhold.conf:
$ cat > musiconhold.conf
; musiconhold.conf
[general]

[default]
mode=files
directory=moh

14.Save your changes and your module configuration is done. Your system is ready to configure your dialplan and channels.

15. Check visudo, find wheel
Edit /etc/group 
wheel:x:10:asteriskpbx

check the acces for astriskpbx user
su -u asteriskpbx
ls /root
sudo su -

16.Another dependency is required for installing DAHDI, and that is the kernel source.
#yum install kernel-devel

-------------------
17. Install DAHDI - Короче в контейнере DAHDI установить не удалось. С железками работать не собираемся, значит обойдемся, думаю на реальной виртуалке нормально запустится
или надо хост апдейтить
cd ~/src/asterisk-complete/
$ mkdir dahdi
$ cd dahdi/
$ svn co http://svn.asterisk.org/svn/dahdi/linux-complete/tags/2.6.1+2.6.1
$ cd 2.6.1+2.6.1

If  you  are  using  64-bit  RHEL,  use  the  following  commands  to  compile  and  install
DAHDI:
$ cd tools
$ ./configure --libdir=/usr/lib64
$ make
$ sudo make install
$ cd ../linux
$ make
$ sudo make install
$ cd ..
$ sudo make config
For any other platform, use this set of commands to compile and install DAHDI:
$ make all
$ sudo make install
$ sudo make config


18. To start asterisk print
$ /usr/sbin/asterisk -cvvv

module show

core stop now



####Сине-красный интерфейс menuselect. After that you should have the newt-based interface available to you./ Данный интерфейс более информативен и понятен
q - exit
x - save & exit


$sudo yum install libnewt-devel

Если до установки вышеуказанной библиотеки собирали menuselect, делаем следующее
cd ~/src/asterisk-complete/asterisk/13.<your version>/
$ cd menuselect
$ make clean
$ ./configure
$ cd ..
$ make menuselect



The modules listed in the menuselect.makeopts file are those that will not be built—modules that are not listed will be built when the 
make application is executed.
